add_executable( subgridLES_cpp subgridLES.cpp )
target_link_libraries( subgridLES_cpp PUBLIC dalotia_cpp )

if (DALOTIA_E_FOR_MEMORY_TRACE)
    target_compile_definitions(subgridLES_cpp PRIVATE DALOTIA_E_FOR_MEMORY_TRACE)
endif()
if (DALOTIA_E_WITH_LIKWID_MARKERS)
  target_compile_definitions(subgridLES_cpp PRIVATE LIKWID_PERFMON)
  target_include_directories(subgridLES_cpp PRIVATE ${LIKWID_INCLUDE_DIR})
  target_link_libraries(subgridLES_cpp PRIVATE likwid::likwid)
  add_dependencies(subgridLES_cpp likwid::likwid)
endif(DALOTIA_E_WITH_LIKWID_MARKERS)

if (DALOTIA_E_WITH_LIBTORCH)
  target_link_libraries(subgridLES_cpp PRIVATE "${TORCH_LIBRARIES}")
  add_dependencies( subgridLES_cpp torch )
  target_compile_options( subgridLES_cpp PUBLIC "-DDALOTIA_E_WITH_LIBTORCH")
else (DALOTIA_E_WITH_LIBTORCH)
  target_include_directories( subgridLES_cpp PUBLIC ${BLAS_INCLUDE_DIRS})
  target_link_libraries(subgridLES_cpp PRIVATE BLAS::BLAS)
endif(DALOTIA_E_WITH_LIBTORCH)

if (DALOTIA_E_WITH_FORTRAN)
    add_executable( subgridLES_fortran subgridLES.f03 )
    set_source_files_properties(
      subgridLES.f03
      PROPERTIES Fortran_PREPROCESS ON
    )
    target_include_directories( subgridLES_fortran PUBLIC $<TARGET_PROPERTY:dalotia_fortran,Fortran_MODULE_DIRECTORY>)
    set_target_properties(subgridLES_fortran PROPERTIES LINKER_LANGUAGE Fortran)
    target_link_libraries(subgridLES_fortran PRIVATE BLAS::BLAS)
    target_link_libraries( subgridLES_fortran PUBLIC dalotia_fortran )
    if (DALOTIA_E_FOR_MEMORY_TRACE)
        target_compile_definitions(subgridLES_fortran PRIVATE DALOTIA_E_FOR_MEMORY_TRACE)
    endif()
    if (DALOTIA_E_WITH_LIKWID_MARKERS)
      target_compile_definitions(subgridLES_fortran PRIVATE LIKWID_PERFMON)
      target_include_directories(subgridLES_fortran PRIVATE ${LIKWID_INCLUDE_DIR})
      target_link_libraries(subgridLES_fortran PRIVATE likwid::likwid)
      add_dependencies(subgridLES_fortran likwid::likwid)
    endif(DALOTIA_E_WITH_LIKWID_MARKERS)
endif (DALOTIA_E_WITH_FORTRAN)

# if (OpenMP_CXX_FOUND)
#   target_link_libraries(subgridLES_fortran PUBLIC OpenMP::OpenMP_CXX)
# endif ()

file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/input_SubgridLESNet.safetensors DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/output_SubgridLESNet.safetensors DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/weights_SubgridLESNet.safetensors DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/traced_SubgridLESNet.pt DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
